{"version":3,"sources":["Components/Card.js","Components/Main.js","Components/Marvel.js","App.js","index.js"],"names":["Card","_ref","data","navigate","useNavigate","React","createElement","Fragment","map","item","className","key","id","onClick","concat","src","thumbnail","path","extension","alt","name","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getHash","ts","secretKey","publicKey","MD5","toString","Main","_useState","useState","_useState2","_slicedToArray","setItem","_useState3","_useState4","search","setSearch","useEffect","_asyncToGenerator","_callee","baseUrl","apiKey","hash","url","response","_context","process","Date","now","fetch","json","results","t0","console","_x","apply","arguments","fetchData","placeholder","onChange","e","target","onKeyPress","Marvel","useParams","description","App","Routes","Route","element","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.96371d73.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nexport const Card = ({ data }) => {\n  let navigate=useNavigate();\n  return (\n    <>\n      {\n        (data) ? (\n          data.map(item => {\n            return (\n              <div className=\"card\" key={item.id} \n              onClick={()=>navigate(`/${item.id}`)}>\n                <img src={`${item.thumbnail.path}.${item.thumbnail.extension}`} alt=\"\" />\n                <div className=\"title\">\n                  <h3>{item.name}</h3>\n                </div>\n              </div>\n            )\n          })\n        ):\"\"\n      }\n\n    </>\n  )\n}\n\n","import React,{useState,useEffect} from \"react\"\nimport { Card } from \"./Card\"\n// import axios from \"axios\"\n// import { useState } from \"react\"\n// import { useEffect } from \"react\"\n\nimport {MD5}  from \"crypto-js\"\n// import axios from \"axios\"\nconst API_URL=process.env.REACT_APP_BASE_URL\n\nconst getHash=(ts,secretKey,publicKey)=>{\n  return MD5(ts+secretKey+publicKey).toString()\n}\n\nexport const Main = () => {\n  // const [url,setUrl]=useState(url)\n  const [item,setItem]=useState();\n  const [search,setSearch]=useState(\"\");\n  useEffect(()=>{\n    const fetchData=async(value)=>{\n      // fetch\n      try{\n      let baseUrl = `${API_URL}/v1/public/characters`;\n\n    let ts = Date.now().toString();\n    let apiKey = process.env.REACT_APP_API_KEY;\n    let privateKey = process.env.REACT_APP_PRIVATE_KEY;\n    let hash = getHash(ts, privateKey, apiKey);\n\n    let url = `${baseUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}&nameStartsWith=${value}`;\n\n\n      // end\n      // fetch\n      // let response=await axios.get(url)\n        let response=await fetch(url)\n        let data=await response.json()\n        // console.log(data.data.results);\n        setItem(data.data.results);\n        \n\n    }catch(err){\n        console.error(err);\n        \n    }\n\n      // end fetch\n\n\n      // const res=await axios.get(url)\n      \n    }\n    fetchData(search);\n  },[search])\n  \n  const handleSearch=(e)=>{\n    if (e.key===\"Enter\") {\n      setSearch(e.target.value)\n      \n    }\n    // setUrl(url)\n  }\n\n  return (\n    <>\n        <div className=\"header\">\n            <div className=\"bg\">\n                <img src=\"./Images/bg.jpeg\" alt=\"\" />\n            </div>\n            <div className=\"search-bar\">\n                {/* <img src=\"./Images/logo.jpg\" alt=\"logo\" /> */}\n                <input type=\"search\" placeholder='Search Here'\n                 className='search'\n                 onChange={e=>setSearch(e.target.value)}\n                 onKeyPress={handleSearch}/>\n            </div>\n        </div>\n       <div className=\"content\">\n         \n        {\n          (!item)?<p>Not Found</p>:<Card data={item}/>\n        }\n       </div>\n    </>\n  )\n}\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\n// import axios from 'axios';\nimport { useState } from 'react';\nimport {MD5}  from \"crypto-js\"\n// import axios from \"axios\"\nconst API_URL=process.env.REACT_APP_BASE_URL\n\nconst getHash=(ts,secretKey,publicKey)=>{\n  return MD5(ts+secretKey+publicKey).toString()\n}\nexport const Marvel = () => {\n  const {id}=useParams();\n  const [item,setItem]=useState()\n  const fetch=async(value)=>{\n    // start\n    try{\n      let baseUrl = `${API_URL}/v1/public/characters`;\n\n    let ts = Date.now().toString();\n    let apiKey = process.env.REACT_APP_API_KEY;\n    let privateKey = process.env.REACT_APP_PRIVATE_KEY;\n    let hash = getHash(ts, privateKey, apiKey);\n\n    let url = `${baseUrl}?ts=${ts}&apikey=${apiKey}&hash=${hash}&nameStartsWith=${value}`;\n\n        let response=await fetch(url)\n        let data=await response.json()\n        // console.log(data.data.results);\n        setItem(data.data.results[0]);\n        \n\n    }catch(err){\n        console.error(err);\n        \n    }\n\n    // end\n    // const res=await axios.get(`https://gateway.marvel.com:443/v1/public/characters/${id}?ts=1&apikey=2e1cdeec426ae323484f29024084c206&hash=d516513ba95b9407c7aca0f73b241f8a`)\n    // setItem(res.data.data.results[0])\n  }\n  React.useEffect(()=>{\n    fetch('your-value-here')\n  },[])\n  // fetch();\n  return (\n    <>\n    {\n      (!item)? \"\":(\n        <div className=\"box-content\">\n          <div className=\"right-box\">\n          <img src={`${item.thumbnail.path}.${item.thumbnail.extension}`} alt=\"\" />\n          </div>\n          <div className=\"left-box\">\n            <h1>{item.name}</h1>\n            <h4>{item.description}</h4>\n          </div>\n        </div>\n      )\n    }\n    </>\n  )\n}\n","import React from 'react';\nimport { Main } from './Components/Main';\nimport './Components/style.css';\nimport {Routes,Route} from 'react-router-dom'\nimport { Marvel } from './Components/Marvel';\n\nfunction App() {\n  return (\n    <>\n     <Routes>\n     \n       <Route path='/'element={<Main/>}/>\n       <Route path='/Marvel' element={<Marvel/>}/>\n     </Routes>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render( \n  <BrowserRouter>\n      <App /> \n  </BrowserRouter>\n    \n     ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}